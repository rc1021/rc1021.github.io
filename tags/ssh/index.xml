<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ssh on 內行人開發筆記</title>
    <link>https://rc1021.github.io/tags/ssh/</link>
    <description>Recent content in ssh on 內行人開發筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Fri, 22 Apr 2022 11:15:59 +0800</lastBuildDate><atom:link href="https://rc1021.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>免密碼登入遠程主機(SSH copy id)</title>
      <link>https://rc1021.github.io/posts/ssh-copy-id/</link>
      <pubDate>Fri, 22 Apr 2022 11:15:59 +0800</pubDate>
      
      <guid>https://rc1021.github.io/posts/ssh-copy-id/</guid>
      <description>如果你有 SSH 金鑰就能免密碼登入遠程主機
先決條件  假設在你的系統安裝了 OpenSSH。  產生 SSH 金鑰(假設你沒有) 執行 ssh-keygen 產生 ssh key
$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key ... 執行指令 假設你要登入的遠程指定為 ssh {username}@{remote.ip}
使用 ssh-copy-id 複製金鑰到遠程主機，這期間會問你登入密碼
$ ssh-copy-id {username}@{remote.ip} The authenticity of host &amp;#39;{remote.ip}&amp;#39; can&amp;#39;t be established. ECDSA key fingerprint is xxxxxx. Are you sure you want to continue connecting (yes/no)? yes /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed /usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys {username}@{remote.</description>
    </item>
    
    <item>
      <title>SSH Copy</title>
      <link>https://rc1021.github.io/posts/ssh-copy/</link>
      <pubDate>Sun, 17 Apr 2022 14:43:52 +0800</pubDate>
      
      <guid>https://rc1021.github.io/posts/ssh-copy/</guid>
      <description>如果你需要將檔案或目錄從本地上傳到遠程伺服器，或從遠程下載資料到本地電腦，可以使用 scp 達成。
先決條件  如果不希望每次都輸入密碼設定 SSH copy id  scp 指令用法 從本地位置複製到遠程位置 (上傳)
$ scp -r /path/from/local username@hostname:/path/to/remote 從遠程位置複製到本地位置 (下載)
$ scp -r username@hostname:/path/from/remote /path/to/local 加上自訂端口(Port)
$ scp -r -P xxxx username@hostname:/path/from/remote /path/to/local 說明:
 -r 使用遞歸複製所有目錄和文件 hostname 將是主機名或 IP 地址 如果需要自定義端口（除了端口 22），請使用 -P portnumber  恭喜你又學會一個技巧了
 聽說：小故事大道理 來源 萬維鋼精英日課2：努力就有收獲不等於努力就能成功
「努力就有收穫」肯定是沒錯的，但我們得區別「努力就有收穫」和「努力就能成功」。現在我們關注的所謂「成功」，是指出類拔萃，是相對於大多數人，你是一個什麼位置。如果會努力的人很多，而具有開放頭腦和創造性思維的人很少，那麼「努力」就不是一個預測「成功」的好指標。
越是競爭激烈的領域，天賦和機遇就越重要。比如職業足球、音樂家這些領域，願意勤學苦練的人實在太多了，最後勝出的肯定得有點天賦。如果一個領域僅僅是努力就能比別人領先很多，那只能說明願意進入這個領域的高手太少。</description>
    </item>
    
    <item>
      <title>透過 SSH config 登入遠端伺服器</title>
      <link>https://rc1021.github.io/posts/login-with-sshconfig/</link>
      <pubDate>Sat, 16 Apr 2022 21:38:14 +0800</pubDate>
      
      <guid>https://rc1021.github.io/posts/login-with-sshconfig/</guid>
      <description>如果你經常通過 SSH 連接到多個遠程系統，你會發現記住所有遠程 IP 地址、不同的用戶名、非標準端口和各種命令行選項是很困難的，如果可以的話，通常會配置 SSH config 記住這些資訊。
先決條件 假設在你的系統裡 ~/.ssh 目錄已經存在且安裝了 OpenSSH。
新增 SSH 配置文件 默認情況下，SSH 配置文件可能不存在，因此請使用 touch 命令建立它(windows 用戶直接新增檔案)
$ touch ~/.ssh/config 設定權限不讓其它用戶有權更新
$ chmod 600 ~/.ssh/config SSH 配置文件結構 文件結構一共 2 層：
Host {IDENTIFY NAME} {SSH_OPTION} {VALUE} {SSH_OPTION} {VALUE} Host {IDENTIFY NAME} {SSH_OPTION} {VALUE} {SSH_OPTION} {VALUE}  第 1 層為 節點名稱(連線別名) 第 2 層為 SSH Option (像是 User, IP, IdentityFile) + 值  命令改為配置內容 通過 SSH 連接到遠程服務器時，你會使用遠程用戶名稱、主機 IP 位置和端口，下面例子說明使用 SSH 命令以名為 ubuntu 的用戶身份登入 example.</description>
    </item>
    
  </channel>
</rss>
